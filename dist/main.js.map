{"version":3,"sources":["webpack://2d_minecraft_test/./src/canvas/Camera.js","webpack://2d_minecraft_test/./src/canvas/Canvas.js","webpack://2d_minecraft_test/./src/canvas/Controller.js","webpack://2d_minecraft_test/./src/canvas/Vector.js","webpack://2d_minecraft_test/./src/canvas/color_filter.js","webpack://2d_minecraft_test/./src/canvas/geometries.js","webpack://2d_minecraft_test/./src/minecraft_2d_plugin/Block.js","webpack://2d_minecraft_test/./src/minecraft_2d_plugin/minecraft_2d.js","webpack://2d_minecraft_test/webpack/bootstrap","webpack://2d_minecraft_test/webpack/runtime/compat get default export","webpack://2d_minecraft_test/webpack/runtime/define property getters","webpack://2d_minecraft_test/webpack/runtime/hasOwnProperty shorthand","webpack://2d_minecraft_test/webpack/runtime/make namespace object","webpack://2d_minecraft_test/./src/main.js"],"names":[],"mappings":";;;;;;;;;AAAA,KAAK,SAAS,GAAG,mBAAO,CAAC,wCAAU;;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,kBAAkB,S;;;;;;;;;;ACxClB,KAAK,MAAM,GAAG,mBAAO,CAAC,gDAAc;AACpC,mBAAmB,mBAAO,CAAC,oDAAgB;AAC3C,OAAO,SAAS,GAAG,mBAAO,CAAC,wCAAU;;;AAGrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,YAAY,EAAE;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,S;;;;;;;;;;ACvFlB,KAAK,SAAS,GAAG,mBAAO,CAAC,wCAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,2BAA2B;AAC9E,iDAAiD,4BAA4B;AAC7E;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,a;AACA,S;AACA;AACA;;;AAGA,kBAAkB;;;;;;;;;;;;ACzDlB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,G;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,U;;;;;;;;;;ACnKlB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;AChBA,KAAK,SAAS,GAAG,mBAAO,CAAC,wCAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0F;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA,uB;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA,kBAAkB,O;;;;;;;;;;AC/ClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,Q;;;;;;;;;;;;;;;;;;;;;ACTlB,KAAK,QAAQ,GAAG,mBAAO,CAAC,mDAAS;AACjC,aAAa,mBAAO,CAAC,4DAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;;;AAIA;;AAEA,kBAAkB,S;;;;;;;;;;;;;;;;;UCpClB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;;;;ACNyC;AACS;AACT;AACkB;AACtB;;AAErC,iBAAiB,kDAAM;AACvB;;AAEA,gBAAgB,oEAAK;;AAErB;AACA,qBAAqB,2DAAW;AAChC,iBAAiB,kDAAM;AACvB;AACA;AACA;;AAEA;;AAEA,wBAAwB,wCAAS;;;AAGjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kB;;AAEA,kCAAkC,WAAW,WAAW;;AAExD,sBAAsB,+BAA+B,EAAE;;AAEvD;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,sDAAsD,EAAE","file":"main.js","sourcesContent":["var { Vector } = require(\"./Vector\");\r\n\r\n\r\nclass Camera {\r\n    constructor(player) {\r\n        this.player = player;\r\n        this.canvas;\r\n        this.objects;\r\n        this.velocity = new Vector(0, 0);\r\n        this.position = new Vector(0, 0);\r\n        this.offset = new Vector(0, 0);\r\n        this.acceleration_multiplicator = 0.02;\r\n    }\r\n\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas;\r\n        this.updatePosition();\r\n    }\r\n\r\n    updatePosition() {\r\n        this.position.x = (this.canvas.width / 2) - this.player.size.x / 2;\r\n        this.position.y = (this.canvas.height / 2) - this.player.size.y / 2;\r\n    }\r\n\r\n    update(ctime) {\r\n        this.updatePosition();\r\n        \r\n        var acceleration = Vector.subtract(this.player.position, this.position);\r\n        acceleration.multiply(this.acceleration_multiplicator);\r\n\r\n        this.offset.subtract(acceleration);\r\n\r\n        this.objects.forEach(obj => {\r\n            obj.position.subtract(acceleration);\r\n        });\r\n\r\n        this.acceleration_multiplicator = 0.02;\r\n    }\r\n}\r\n\r\nmodule.exports = { Camera }","var { Box } = require(\"./geometries\");\r\nvar color_filter = require(\"./color_filter\");\r\nconst { Vector } = require(\"./Vector\");\r\n\r\n\r\nclass Ctx {\r\n    constructor(canvas, objects) {\r\n        this.canvas = canvas;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.ctx.imageSmoothingEnabled = false;\r\n        this.objects = objects;\r\n    }\r\n\r\n    createBox(x, y, w, h, color) {\r\n        let box = new Box(x, y, w, h, color_filter(color), this.ctx);\r\n        this.objects.push(box);\r\n        return box;\r\n    }\r\n\r\n    clearRect(x, y, w, h) {\r\n        this.ctx.clearRect(x, y, w, h);\r\n    }\r\n\r\n    reset() {\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.ctx.imageSmoothingEnabled = false;\r\n        this.objects.forEach((obj) => { obj.setCtx(this.ctx); });\r\n    }\r\n    translate(x, y) {\r\n        this.ctx.translate(x, y);\r\n    }\r\n}\r\n\r\nclass Canvas {\r\n    constructor(width, height) {\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.outline();\r\n        document.body.appendChild(this.canvas);\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.objects = [];\r\n        this.ctx = new Ctx(this.canvas, this.objects);\r\n        this.controller = undefined;\r\n        this.player = undefined;\r\n    }\r\n\r\n    clear() {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    outline() {\r\n        this.canvas.style.outline = \"1px solid black\";\r\n    }\r\n    \r\n    resize(w, h) {\r\n        this.canvas.width = w;\r\n        this.canvas.height = h;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.ctx.reset();\r\n    }\r\n\r\n    drawAll() {\r\n        this.objects.forEach((obj) => { obj.draw(); });\r\n    }\r\n\r\n    setController(Constroller) {\r\n        this.controller = Constroller;\r\n        this.controller.canvas = this;\r\n        this.controller.objects = this.objects;\r\n    }\r\n\r\n    setCamera(camera) {\r\n        this.camera = camera;\r\n        this.camera.setCanvas(this);\r\n        this.camera.objects = this.objects;\r\n    }\r\n\r\n    setPlayer(playerGeometry) {\r\n        this.player = playerGeometry;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = { Canvas }","var { Vector } = require(\"./Vector\");\r\n\r\nclass Constroller {\r\n    constructor(geometry) {\r\n        this.player = geometry;\r\n        this.objects;\r\n        this.canvas;\r\n        this.keys = {};\r\n        this.aspeed = 0.4;\r\n        this.velocity = new Vector(0, 0);\r\n        this.acceleration = new Vector(0, 0);\r\n        this.acceleration.limit = 0.5;\r\n        this.velocity.limit = 15;\r\n        this.canJump = false;\r\n\r\n        window.addEventListener(\"keydown\", (e) => { this.keys[e.code] = true });\r\n        window.addEventListener(\"keyup\", (e) => { this.keys[e.code] = false });\r\n    }\r\n\r\n    gravity(ctime) {\r\n\r\n        this.acceleration.add(new Vector(0, 0.3 * ctime));\r\n\r\n        this.objects.forEach(obj => {\r\n            if (obj != this.player) {\r\n                if ((this.player.position.y + this.player.size.y >= obj.position.y && this.player.position.y < obj.position.y + obj.size.y) &&    \r\n                    (this.player.position.x + this.player.size.x >= obj.position.x && this.player.position.x < obj.position.x + obj.size.x ) ) {\r\n                    this.player.position.y = obj.position.y - this.player.size.y;\r\n                    this.canJump = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    update(ctime) {\r\n        this.velocity.add(this.acceleration);\r\n        this.player.position.add(this.velocity);\r\n        this.gravity(ctime);\r\n\r\n        if (this.keys.KeyD) {\r\n            this.player.position.x += this.aspeed * ctime;\r\n        }\r\n\r\n        if (this.keys.KeyA) {\r\n            this.player.position.x -= this.aspeed * ctime;\r\n        }\r\n\r\n        if (this.keys.Space) {\r\n            if (this.canJump) {\r\n                this.velocity.y = -10;\r\n                this.canJump = false;\r\n            } \r\n        }       \r\n    }\r\n}\r\n\r\n\r\nmodule.exports = { Constroller }\r\n\r\n","/*\r\nSimple 2D JavaScript Vector Class\r\nHacked from evanw's lightgl.js\r\nhttps://github.com/evanw/lightgl.js/blob/master/src/vector.js\r\n*/\r\n\r\nfunction Vector(x, y) {\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.limit = undefined;\r\n}\r\n\r\n/* INSTANCE METHODS */\r\n\r\nVector.prototype = {\r\n\tnegative: function() {\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.limit = undefined;\r\n\t\treturn this;\r\n\t},\r\n\tadd: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t} else {\r\n\t\t\tthis.x += v;\r\n\t\t\tthis.y += v;\r\n\t\t}\t\r\n\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\tsubtract: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t} else {\r\n\t\t\tthis.x -= v;\r\n\t\t\tthis.y -= v;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\tmultiply: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t} else {\r\n\t\t\tthis.x *= v;\r\n\t\t\tthis.y *= v;\r\n\t\t}\r\n\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\r\n\t\treturn this;\r\n\t},\r\n\tdivide: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tif(v.x != 0) this.x /= v.x;\r\n\t\t\tif(v.y != 0) this.y /= v.y;\r\n\t\t} else {\r\n\t\t\tif(v != 0) {\r\n\t\t\t\tthis.x /= v;\r\n\t\t\t\tthis.y /= v;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\r\n\t\treturn this;\r\n\t},\r\n\tsetLimit: function (limit) {\r\n\r\n\t\tif (this.x > this.limit) \r\n\t\t\tthis.x = this.limit;\r\n\t\t\r\n\t\tif (this.y > this.limit) \r\n\t\t\tthis.y = this.limit\r\n\r\n\t\tif (this.x < -this.limit)\r\n\t\t\tthis.x = -this.limit\r\n\r\n\t\tif (this.y < -this.limit) \r\n\t\t\tthis.y = -this.limit;\r\n\r\n\t},\r\n\tequals: function(v) {\r\n\t\treturn this.x == v.x && this.y == v.y;\r\n\t},\r\n\tdot: function(v) {\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\t},\r\n\tcross: function(v) {\r\n\t\treturn this.x * v.y - this.y * v.x\r\n\t},\r\n\tlength: function() {\r\n\t\treturn Math.sqrt(this.dot(this));\r\n\t},\r\n\tnormalize: function() {\r\n\t\treturn this.divide(this.length());\r\n\t},\r\n\tmin: function() {\r\n\t\treturn Math.min(this.x, this.y);\r\n\t},\r\n\tmax: function() {\r\n\t\treturn Math.max(this.x, this.y);\r\n\t},\r\n\ttoAngles: function() {\r\n\t\treturn -Math.atan2(-this.y, this.x);\r\n\t},\r\n\tangleTo: function(a) {\r\n\t\treturn Math.acos(this.dot(a) / (this.length() * a.length()));\r\n\t},\r\n\ttoArray: function(n) {\r\n\t\treturn [this.x, this.y].slice(0, n || 2);\r\n\t},\r\n\tclone: function() {\r\n\t\treturn new Vector(this.x, this.y);\r\n\t},\r\n\tset: function(x, y) {\r\n\t\tthis.x = x; this.y = y;\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\n/* STATIC METHODS */\r\nVector.negative = function(v) {\r\n\treturn new Vector(-v.x, -v.y);\r\n};\r\nVector.add = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x + b.x, a.y + b.y);\r\n\telse return new Vector(a.x + b, a.y + b);\r\n};\r\nVector.subtract = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x - b.x, a.y - b.y);\r\n\telse return new Vector(a.x - b, a.y - b);\r\n};\r\nVector.multiply = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x * b.x, a.y * b.y);\r\n\telse return new Vector(a.x * b, a.y * b);\r\n};\r\nVector.divide = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x / b.x, a.y / b.y);\r\n\telse return new Vector(a.x / b, a.y / b);\r\n};\r\nVector.equals = function(a, b) {\r\n\treturn a.x == b.x && a.y == b.y;\r\n};\r\nVector.dot = function(a, b) {\r\n\treturn a.x * b.x + a.y * b.y;\r\n};\r\nVector.cross = function(a, b) {\r\n\treturn a.x * b.y - a.y * b.x;\r\n};\r\n\r\nmodule.exports = { Vector };","function color_filter(color) {\r\n    switch (color) {\r\n        case \"red\":\r\n            return \"#ff0000\";\r\n        \r\n        case \"green\": \r\n            return \"#00ff00\";\r\n\r\n        case \"blue\": \r\n            return \"#0000ff\";\r\n\r\n        default:\r\n            return color;\r\n    }\r\n}\r\n\r\nmodule.exports = color_filter;","var { Vector } = require(\"./Vector\");\r\n\r\nclass Box {\r\n    constructor(x, y, w, h, color, ctx) {\r\n        this.position = new Vector(x, y);\r\n        this.size = new Vector(w, h);\r\n        this.velocity = new Vector(0, 0);\r\n        this.acceleration = new Vector(0, 0);\r\n        this.uuid = Math.random();\r\n        this.img;\r\n        this.color;\r\n        if (!color.includes(\"/\")) {\r\n            this.color = color;\r\n        } else {\r\n            let img = document.createElement(\"img\"); img.src = color;\r\n            this.img = img;\r\n        }\r\n        this.ctx = ctx;\r\n    }\r\n\r\n    draw() {\r\n        if (this.img == undefined) {\r\n            this.ctx.fillStyle = this.color;\r\n            this.ctx.fillRect(this.position.x, this.position.y, this.size.x, this.size.y); \r\n        } else {\r\n            this.ctx.drawImage(this.img, this.position.x, this.position.y, this.size.x, this.size.y);\r\n        }\r\n\r\n    }\r\n    \r\n    setImage(img) {\r\n        this.img = img; \r\n    }\r\n\r\n    setImageSrc(img1) {\r\n        let img = document.createElement(\"img\"); img.src = img1;\r\n        this.img = img;\r\n    }\r\n\r\n    setCtx(ctx) {\r\n        this.ctx = ctx;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nmodule.exports = { Box };","class Block {\r\n    constructor(block_texture, id, name, sprite) {\r\n        this.texture = block_texture;\r\n        this.id = id;\r\n        this.name = name;\r\n        this.sprite = sprite;\r\n    }\r\n}\r\n\r\nmodule.exports = { Block }","var { Block } = require(\"./Block\");\r\nvar Blocks = require(\"./Blocks.json\");\r\n\r\nclass World {\r\n    constructor(worldSize, canvas, ctx) {\r\n        this.worldSize = worldSize;\r\n        this.canvas = canvas;\r\n        this.ctx = ctx;\r\n        this.blocks = [];\r\n    }\r\n\r\n    Player(coordX, coordY) {\r\n        return this.ctx.createBox(coordX*this.worldSize, coordY*this.worldSize, this.worldSize, this.worldSize*2, \"red\");\r\n    }\r\n\r\n    createBlock(coordX, coordY, id) {\r\n        let block = Blocks[id];\r\n        let x = (coordX * this.worldSize) + this.canvas.camera.offset.x;\r\n        let y = (coordY * this.worldSize) + this.canvas.camera.offset.y;\r\n\r\n        let block_texture = this.ctx.createBox(x, y, this.worldSize, this.worldSize, block.sprite);\r\n        let block_obj = new Block(block_texture, id, block.name, block.sprite);\r\n\r\n        this.blocks.push(block_obj);\r\n    }\r\n\r\n    generateFromArray(worldArray) {\r\n        worldArray.forEach(block => {\r\n            this.createBlock(block.x, block.y, block.id);\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = { World };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Canvas } from \"./canvas/Canvas\";\r\nimport { Constroller } from \"./canvas/Controller\";\r\nimport { Camera } from \"./canvas/Camera\";\r\nimport { World } from \"./minecraft_2d_plugin/minecraft_2d\";\r\nimport world_gen from \"./world.json\";\r\n\r\nvar canvas = new Canvas(window.innerWidth, window.innerHeight);\r\nvar ctx = canvas.ctx;\r\n\r\nvar world = new World(50, canvas, ctx);\r\n\r\nvar player = world.Player(0, 0);\r\nvar controller = new Constroller(player);\r\nvar camera = new Camera(player);\r\ncanvas.setCamera(camera);\r\ncanvas.setController(controller);\r\ncamera.acceleration_multiplicator = 1;\r\n\r\nwindow.world = world;\r\n\r\nworld.generateFromArray(world_gen);\r\n\r\n\r\nfunction create_block() {\r\n    var x = document.querySelector(\"#x\").value;\r\n    var y = document.querySelector(\"#y\").value;\r\n    var id = document.querySelector(\"#id\").value;\r\n\r\n    world.createBlock(x, y, id);\r\n}\r\n\r\nwindow.create_block = create_block;\r\n\r\nlet ltime = 0, ctime = 0;\r\nupdate();\r\nfunction update(stime) {\r\n    canvas.clear();\r\n\r\n    ctime = stime - ltime;\r\n    ltime = stime; \r\n\r\n    if (String(ctime) === \"NaN\") { ltime = 0; ctime = 0; }\r\n\r\n    setTimeout(() => { requestAnimationFrame(update); }, 1000/100);\r\n\r\n    canvas.drawAll();\r\n    canvas.controller.update(ctime);\r\n    canvas.camera.update(ctime);\r\n}\r\n\r\n// resize \r\nwindow.addEventListener(\"resize\", () => { canvas.resize(window.innerWidth, window.innerHeight); });\r\n\r\n\r\n"],"sourceRoot":""}